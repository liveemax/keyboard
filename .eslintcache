[{"C:\\react\\keyboard\\src\\reportWebVitals.js":"1","C:\\react\\keyboard\\src\\index.tsx":"2","C:\\react\\keyboard\\src\\component\\Main\\HeaderKeyboard\\HeaderKeyboard.tsx":"3","C:\\react\\keyboard\\src\\component\\Main\\InputKeyboard\\InputKeyboardContainer.tsx":"4","C:\\react\\keyboard\\src\\component\\Main\\MyKeyboard\\MyKeyboardContainer.tsx":"5","C:\\react\\keyboard\\src\\component\\Main\\InputKeyboard\\InputKeyboard.tsx":"6","C:\\react\\keyboard\\src\\component\\Main\\MyKeyboard\\MyKeyboard.tsx":"7","C:\\react\\keyboard\\src\\component\\Main\\InputKeyboard\\whereNewRow.tsx":"8","C:\\react\\keyboard\\src\\component\\Main\\InputKeyboard\\ClickMeToTape.tsx":"9","C:\\react\\keyboard\\src\\component\\Main\\HeaderKeyboard\\menuPosition.ts":"10","C:\\react\\keyboard\\src\\component\\Main\\HeaderKeyboard\\HeaderKeyboardContainer.tsx":"11","C:\\react\\keyboard\\src\\component\\Main\\InputKeyboard\\handleChange\\setHandleSpeed.ts":"12","C:\\react\\keyboard\\src\\component\\Main\\InputKeyboard\\handleChange\\setHandleNextText.ts":"13","C:\\react\\keyboard\\src\\component\\Main\\InputKeyboard\\handleChange\\setHandleError.ts":"14","C:\\react\\keyboard\\src\\component\\Main\\InputKeyboard\\handleChange\\initialRightButton.ts":"15","C:\\react\\keyboard\\src\\component\\Main\\InputKeyboard\\SmallStatistic\\SmallStatistic.tsx":"16","C:\\react\\keyboard\\src\\component\\Main\\InputKeyboard\\SmallStatistic\\speedAverage.ts":"17","C:\\react\\keyboard\\src\\component\\Aside\\speed.ts":"18","C:\\react\\keyboard\\src\\component\\Main\\HeaderKeyboard\\MoreBadKey.tsx":"19","C:\\react\\keyboard\\src\\component\\Aside\\TabPanel.tsx":"20","C:\\react\\keyboard\\src\\component\\Main\\InputKeyboard\\Blink\\Blink.tsx":"21","C:\\react\\keyboard\\src\\redux\\header-reducer.ts":"22","C:\\react\\keyboard\\src\\redux\\store.ts":"23","C:\\react\\keyboard\\src\\redux\\input-reducer.ts":"24","C:\\react\\keyboard\\src\\redux\\function\\sortTextByScore.ts":"25","C:\\react\\keyboard\\src\\redux\\function\\bubbleSort.ts":"26","C:\\react\\keyboard\\src\\redux\\function\\getNewText.ts":"27","C:\\react\\keyboard\\src\\redux\\function\\generateText.ts":"28","C:\\react\\keyboard\\src\\redux\\function\\getAlphabet.ts":"29","C:\\react\\keyboard\\src\\redux\\function\\getArrayCommonCharacter.ts":"30","C:\\react\\keyboard\\src\\redux\\function\\getCurrentIndex.ts":"31","C:\\react\\keyboard\\src\\redux\\function\\getKeyComplexity.ts":"32","C:\\react\\keyboard\\src\\redux\\function\\inputArrInWordArr.ts":"33","C:\\react\\keyboard\\src\\redux\\function\\setSpeedInArray.ts":"34","C:\\react\\keyboard\\src\\redux\\function\\setStateTypeScore.ts":"35","C:\\react\\keyboard\\src\\redux\\function\\setTypeCounterInArray.ts":"36","C:\\react\\keyboard\\src\\pxToRem.ts":"37","C:\\react\\keyboard\\src\\App.tsx":"38","C:\\react\\keyboard\\src\\component\\Advertising\\Advertising.tsx":"39","C:\\react\\keyboard\\src\\component\\Header\\Header.tsx":"40","C:\\react\\keyboard\\src\\handlerClickApp.tsx":"41","C:\\react\\keyboard\\src\\component\\Aside\\AsideContainer.tsx":"42","C:\\react\\keyboard\\src\\component\\Footer\\Footer.tsx":"43","C:\\react\\keyboard\\src\\component\\Aside\\Aside.tsx":"44","C:\\react\\keyboard\\src\\component\\Main\\Main.tsx":"45","C:\\react\\keyboard\\src\\component\\Main\\ComplexityKeyboard\\ComplexityKeyboardContainer.tsx":"46","C:\\react\\keyboard\\src\\component\\Main\\ComplexityKeyboard\\ComplexityKeyboard.tsx":"47","C:\\react\\keyboard\\src\\component\\Main\\InputKeyboard\\handlerClick.ts":"48","C:\\react\\keyboard\\src\\component\\Main\\InputKeyboard\\handleChange\\handleChange.tsx":"49"},{"size":362,"mtime":1614518626037,"results":"50","hashOfConfig":"51"},{"size":440,"mtime":1614527810400,"results":"52","hashOfConfig":"51"},{"size":2562,"mtime":1614545997306,"results":"53","hashOfConfig":"51"},{"size":1121,"mtime":1614553267104,"results":"54","hashOfConfig":"51"},{"size":646,"mtime":1614548701195,"results":"55","hashOfConfig":"51"},{"size":7885,"mtime":1614603880465,"results":"56","hashOfConfig":"51"},{"size":2647,"mtime":1614548701236,"results":"57","hashOfConfig":"51"},{"size":493,"mtime":1614602920794,"results":"58","hashOfConfig":"51"},{"size":1497,"mtime":1614598713016,"results":"59","hashOfConfig":"51"},{"size":482,"mtime":1614546630425,"results":"60","hashOfConfig":"51"},{"size":762,"mtime":1614546030022,"results":"61","hashOfConfig":"51"},{"size":479,"mtime":1614603387651,"results":"62","hashOfConfig":"51"},{"size":220,"mtime":1614603687595,"results":"63","hashOfConfig":"51"},{"size":203,"mtime":1614603501481,"results":"64","hashOfConfig":"51"},{"size":407,"mtime":1614603935925,"results":"65","hashOfConfig":"51"},{"size":397,"mtime":1614604381358,"results":"66","hashOfConfig":"51"},{"size":320,"mtime":1614604356152,"results":"67","hashOfConfig":"51"},{"size":225,"mtime":1614539257027,"results":"68","hashOfConfig":"51"},{"size":3254,"mtime":1614547372688,"results":"69","hashOfConfig":"51"},{"size":1380,"mtime":1614538939633,"results":"70","hashOfConfig":"51"},{"size":838,"mtime":1614603114359,"results":"71","hashOfConfig":"51"},{"size":7191,"mtime":1614604026638,"results":"72","hashOfConfig":"51"},{"size":847,"mtime":1614508315481,"results":"73","hashOfConfig":"51"},{"size":1023,"mtime":1614342521342,"results":"74","hashOfConfig":"51"},{"size":655,"mtime":1614503124656,"results":"75","hashOfConfig":"51"},{"size":636,"mtime":1614503124678,"results":"76","hashOfConfig":"51"},{"size":452,"mtime":1614502060061,"results":"77","hashOfConfig":"51"},{"size":552,"mtime":1614502485918,"results":"78","hashOfConfig":"51"},{"size":4008,"mtime":1614373379741,"results":"79","hashOfConfig":"51"},{"size":238,"mtime":1614359774984,"results":"80","hashOfConfig":"51"},{"size":403,"mtime":1614501011180,"results":"81","hashOfConfig":"51"},{"size":937,"mtime":1614501572813,"results":"82","hashOfConfig":"51"},{"size":1135,"mtime":1614502562895,"results":"83","hashOfConfig":"51"},{"size":422,"mtime":1614604045462,"results":"84","hashOfConfig":"51"},{"size":1199,"mtime":1614503501077,"results":"85","hashOfConfig":"51"},{"size":196,"mtime":1614502007973,"results":"86","hashOfConfig":"51"},{"size":192,"mtime":1614516850815,"results":"87","hashOfConfig":"51"},{"size":2940,"mtime":1614539659804,"results":"88","hashOfConfig":"51"},{"size":705,"mtime":1614529065240,"results":"89","hashOfConfig":"51"},{"size":687,"mtime":1614529629587,"results":"90","hashOfConfig":"51"},{"size":299,"mtime":1614529629482,"results":"91","hashOfConfig":"51"},{"size":292,"mtime":1614537322263,"results":"92","hashOfConfig":"51"},{"size":529,"mtime":1614530122007,"results":"93","hashOfConfig":"51"},{"size":3323,"mtime":1614538174949,"results":"94","hashOfConfig":"51"},{"size":605,"mtime":1614541728029,"results":"95","hashOfConfig":"51"},{"size":581,"mtime":1614542281096,"results":"96","hashOfConfig":"51"},{"size":2937,"mtime":1614544122719,"results":"97","hashOfConfig":"51"},{"size":640,"mtime":1614600302235,"results":"98","hashOfConfig":"51"},{"size":1669,"mtime":1614603906654,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"12lh98n",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"105"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"105"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"105"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"105"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"105"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\react\\keyboard\\src\\reportWebVitals.js",[],["206","207"],"C:\\react\\keyboard\\src\\index.tsx",[],["208","209"],"C:\\react\\keyboard\\src\\component\\Main\\HeaderKeyboard\\HeaderKeyboard.tsx",[],"C:\\react\\keyboard\\src\\component\\Main\\InputKeyboard\\InputKeyboardContainer.tsx",[],"C:\\react\\keyboard\\src\\component\\Main\\MyKeyboard\\MyKeyboardContainer.tsx",[],"C:\\react\\keyboard\\src\\component\\Main\\InputKeyboard\\InputKeyboard.tsx",["210","211","212","213"],"import React, {useEffect, useReducer, useState} from 'react';\r\nimport whereNewRow from \"./whereNewRow\";\r\nimport {ClickMeToTape} from \"./ClickMeToTape\";\r\nimport SmallStatistic from \"./SmallStatistic/SmallStatistic\";\r\nimport handleChange from \"./handleChange/handleChange\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport Blink from \"./Blink/Blink\";\r\nimport ReactDOM from 'react-dom'\r\nimport SpaceBarIcon from '@material-ui/icons/SpaceBar';\r\nimport {Alphabet} from \"../../../redux/header-reducer\";\r\n\r\nconst useStyle = makeStyles({\r\n    root: {\r\n        paddingBottom: \"20px\",\r\n    },\r\n    smallStatistic: {\r\n        display: \"flex\",\r\n        justifyContent: \" space-evenly\",\r\n        paddingTop: \"15px\",\r\n    },\r\n\r\n    tape: {\r\n        minHeight: \"150px\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        position: \"relative\",\r\n        \"& #form\": {\r\n            opacity: \" 0.2\",\r\n            textAlign: \"center\",\r\n        }\r\n    },\r\n\r\n    letter: {\r\n        position: \"relative\",\r\n        padding: \"0px\",\r\n        border: \"none\",\r\n        outline: \"none\",\r\n        fontSize: \"30px\",\r\n        \"& svg\": {\r\n            position: \"relative\",\r\n            transform: \"translate(0px,40%)\"\r\n        }\r\n    },\r\n    input: {\r\n        width: \"0\",\r\n        height: \"0\",\r\n        padding: \"0px\",\r\n        border: \"0px\"\r\n    }\r\n\r\n})\r\ntype OwnProps = {\r\n    node: any,\r\n    color: string\r\n}\r\ntype PropsType = {\r\n    allText: Array<string>,\r\n    isInputAvailable: boolean,\r\n    currentLetter: number,\r\n}\r\n\r\nclass Portal extends React.Component<PropsType, OwnProps> {\r\n    state: OwnProps = {\r\n        node: (document as any).createElement('div'),\r\n        color: \"#aaa\"\r\n    }\r\n\r\n    componentDidUpdate(prevProps: PropsType) {\r\n        if (prevProps.currentLetter === 0 && this.state.node.id === `form`) {\r\n            this.forceUpdate(() => {\r\n                this.state.node = document.getElementById(`${this.props.currentLetter}`) || document.createElement('div')\r\n            })\r\n        } else this.state.node = document.getElementById(`${this.props.currentLetter}`) || document.createElement('div')\r\n    }\r\n\r\n    componentWillUpdate(nextProps: PropsType) {\r\n        if (nextProps.currentLetter === nextProps.allText[0].length - 1) {\r\n            if (document.getElementById(\"zoom\") !== null) {\r\n                document.getElementById(\"zoom\")!.style.transform = \"scale(0)\"\r\n            }\r\n        }\r\n        if (nextProps.currentLetter !== this.props.currentLetter) {\r\n            this.state.node.style.color = this.state.color\r\n        }\r\n        if ((nextProps.currentLetter === 0) && nextProps.allText[0] !== this.props.allText[0]) {\r\n            if (this.props.allText[0] !== \"\") {\r\n                for (let step = 0; this.props.allText[0].length - 1 >= step; step++) {\r\n                    document.getElementById(`${step}`)!.style.color = \"#000\"\r\n                }\r\n            }\r\n            this.state.node = document.getElementById(`form`) || document.createElement('div')\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return ReactDOM.createPortal(\r\n            this.props.children,\r\n            this.state.node\r\n        );\r\n    }\r\n}\r\n\r\nexport const init = {speed: [0]}\r\n\r\n\r\ntype Action = { type: 'SET_SPEED', time: number }\r\ntype State = { speed: Array<number> }\r\n\r\nfunction reducer(state: State, action: Action): State {\r\n    switch (action.type) {\r\n        case \"SET_SPEED\": {\r\n            let newSpeed = state.speed.unshift(action.time)\r\n            if (newSpeed > 20) state.speed.pop()\r\n            return {...state}\r\n        }\r\n        default :\r\n            return {...state}\r\n    }\r\n}\r\n\r\ntype root = {\r\n    allText: Array<string>,\r\n    isInputAvailable: boolean,\r\n    alphabet: any,\r\n    separator: number,\r\n    initialTime: number,\r\n    setInitialTime: (initialTime: number) => void,\r\n    setAllText: (alphabet: Alphabet) => void,\r\n    setInputAvailable: (isInputAvailable: boolean) => void,\r\n    setSpeedType: (speedType: string) => void,\r\n    setErrorCount: () => void,\r\n    setCurrentLetter: (currentLetter: string) => void,\r\n    setButtonToKeyboard: (buttonToKeyboard: string) => void,\r\n\r\n}\r\nconst InputKeyboard: React.FC<root> = (props) => {\r\n    const classes = useStyle()\r\n    const [input, setInput] = useState(\"\")\r\n    const [currentError, setCurrentError] = useState(0)\r\n    const [state, dispatch] = useReducer(reducer, init)\r\n    const [currentLetter, setLetter] = useState(0)\r\n    useEffect(() => {\r\n        if (props.allText[0] !== \"ALL BUTTON WAS DISABLE\" && props.isInputAvailable === true) {\r\n            (document as any).getElementById(`input`).focus()\r\n        }\r\n\r\n    }, [props.allText, props.isInputAvailable])\r\n\r\n    return (\r\n        <div className={classes.root} id={\"asd\"}>\r\n            <Portal allText={props.allText} isInputAvailable={props.isInputAvailable} currentLetter={currentLetter}>\r\n                <Blink/>\r\n            </Portal>\r\n            <div className={classes.smallStatistic}>\r\n                <SmallStatistic currentError={currentError} speed={state.speed}/>\r\n            </div>\r\n            <input value={input} className={classes.input} id={\"input\"}\r\n                   onKeyDown={(e) => {\r\n                       props.setButtonToKeyboard(e.key)\r\n                   }}\r\n                   onKeyUp={(e) => {\r\n                       props.setButtonToKeyboard(\" \")\r\n                   }}\r\n                   onChange={(e) => {\r\n                       handleChange(e, props.allText, setInput, props.setInitialTime, props.initialTime, currentLetter, dispatch, setLetter,\r\n                           props.setAllText, props.alphabet, setCurrentError, currentError, props.setSpeedType, props.setErrorCount, props.setCurrentLetter)\r\n                   }}/>\r\n            <div className={classes.tape}>\r\n\r\n\r\n                <div id={\"form\"}>\r\n                    {\r\n                        props.allText[0].split(\"\").filter(whereNewRow(props.separator)).map((element, index, arr) => {\r\n                                if (element === \"/n\" || element === \" \") {\r\n                                    return (<React.Fragment key={index}>\r\n                                            <span className={classes.letter} id={index.toString()}><SpaceBarIcon/></span>\r\n                                            {element === \"/n\" ? <i style={{display: \"block\"}}></i> : null}\r\n                                        </React.Fragment>\r\n                                    )\r\n                                } else if (index === 0) {\r\n                                    return (<React.Fragment key={index}>\r\n                                        <span className={classes.letter} id={index.toString()}>{element}\r\n                                        </span>\r\n                                        </React.Fragment>\r\n\r\n                                    )\r\n                                } else {\r\n                                    return (\r\n                                        <React.Fragment key={index}>\r\n                                <span className={classes.letter} id={index.toString()}>\r\n                                             {element}\r\n                                         </span>\r\n                                        </React.Fragment>\r\n\r\n                                    )\r\n                                }\r\n\r\n                            }\r\n                        )\r\n\r\n                    }\r\n                </div>\r\n                <ClickMeToTape allText={props.allText} setAllText={props.setAllText} alphabet={props.alphabet}\r\n                               setLetter={setLetter} setInputAvailable={props.setInputAvailable}\r\n                               isInputAvailable={props.isInputAvailable}\r\n                               setCurrentError={setCurrentError}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputKeyboard","C:\\react\\keyboard\\src\\component\\Main\\MyKeyboard\\MyKeyboard.tsx",["214"],"import React from \"react\";\r\nimport Keyboard from 'react-simple-keyboard';\r\nimport 'react-simple-keyboard/build/css/index.css';\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport {useEffect} from \"react\";\r\nimport {useRef} from \"react\";\r\nimport {useState} from \"react\";\r\n\r\nconst useStyle=makeStyles({\r\n    root:{\r\n        margin:\"0 auto\"\r\n    }\r\n})\r\n\r\ntype root={\r\n    showKeyboard:{\r\n        display:string\r\n    },\r\n    isKeyboardHidden:boolean,\r\n    keyboard:any,\r\n    currentLang: Array<string>,\r\n    buttonToKeyboard:string\r\n}\r\n\r\nexport const MyKeyboard:React.FC<root> =(state)=>{\r\n    const [letter,setLetter]=useState({style:{backgroundColor:(\"#000\")}})\r\n    const classes=useStyle()\r\n    const keyboard:any = useRef(null);\r\n    useEffect(()=>{\r\n            let a = keyboard.current.getButtonElement(state.buttonToKeyboard)\r\n            if (letter!=={style:{backgroundColor:(\"#000\")}}) {\r\n                letter.style.backgroundColor = (`rgba(255, 255, 255, 1)`)\r\n                setLetter({style:{backgroundColor:(\"#000\")}})\r\n            }\r\n            if (a) {\r\n                setLetter(a)\r\n                a.style.backgroundColor = (`rgba(0, 0, 0, 0.7)`)\r\n            }\r\n    },[state.buttonToKeyboard])\r\n    let firstRow=\"\",secondRow=\"\",thirdRow=\"\",layout\r\n\r\n    for(let key in state.keyboard){\r\n        if(Number(key)<20)firstRow+=state.keyboard[Number(key)].letter.toLowerCase()+\" \"\r\n        else if(Number(key)<40)secondRow+=state.keyboard[Number(key)].letter.toLowerCase()+\" \"\r\n        else if(Number(key)<60)thirdRow+=state.keyboard[Number(key)].letter.toLowerCase()+\" \"\r\n    }\r\n    if(state.currentLang[0]===\"ENGLISH\"){\r\n        layout={\r\n            'default': [\r\n                '` 1 2 3 4 5 6 7 8 9 0 - = {bksp}',\r\n                `{tab} ${firstRow}[ ] \\\\`,\r\n                `{lock} ${secondRow}; ' {enter}`,\r\n                `{shift} ${thirdRow}, . / {shift}`,\r\n                '.com @ {space}'\r\n            ],\r\n            'shift': [\r\n                '~ ! @ # $ % ^ & * ( ) _ + {bksp}',\r\n                `{tab} ${firstRow.toLocaleUpperCase()}{ } |`,\r\n                `{lock} ${secondRow.toLocaleUpperCase()}: \" {enter}`,\r\n                `{shift} ${thirdRow.toLocaleUpperCase()}? {shift}`,\r\n                `.com @ {space}`\r\n            ]\r\n        }\r\n    }\r\n        return (\r\n                <Zoom in={!state.isKeyboardHidden}>\r\n                    <div className={classes.root}>\r\n\r\n                <Keyboard\r\n                    keyboardRef={r => (keyboard.current = r)}\r\n                    layout={layout}\r\n                /></div>\r\n                </Zoom>\r\n\r\n\r\n        );\r\n}\r\n","C:\\react\\keyboard\\src\\component\\Main\\InputKeyboard\\whereNewRow.tsx",["215"],"const whereNewRow = (separator:number) => {\r\n    return(el:any, index:number, arr:Array<string>)=>{\r\n        console.log(arr)\r\n    if (index%separator===(separator-1)) {\r\n        let step\r\n        for (step=0;step!==arr.length;step++) {\r\n            if(arr[index+step+1]===\" \") {\r\n                let slice=arr.slice(index+step+1,arr.length)\r\n                arr[index + step+1 ] = \"/n\"\r\n                break\r\n            }\r\n        }\r\n    }\r\n    return true\r\n}\r\n}\r\nexport default whereNewRow","C:\\react\\keyboard\\src\\component\\Main\\InputKeyboard\\ClickMeToTape.tsx",[],"C:\\react\\keyboard\\src\\component\\Main\\HeaderKeyboard\\menuPosition.ts",["216"],"import React from \"react\";\r\nexport const menuPosition= (positionMenu:any,setPosition:(positionMenu:any)=>void,setNewLanguage:(newLanguage:string[])=>void)=>{\r\n    const open = Boolean(positionMenu);\r\n    const menuOpen = (event:any) => {\r\n        setPosition(event.currentTarget);\r\n    };\r\n    const menuClose = (e:any) => {\r\n        setPosition(null);\r\n        e.currentTarget.innerText && setNewLanguage(e.currentTarget.innerText);\r\n    };\r\n    return {open,menuOpen,menuClose}\r\n}","C:\\react\\keyboard\\src\\component\\Main\\HeaderKeyboard\\HeaderKeyboardContainer.tsx",[],"C:\\react\\keyboard\\src\\component\\Main\\InputKeyboard\\handleChange\\setHandleSpeed.ts",[],"C:\\react\\keyboard\\src\\component\\Main\\InputKeyboard\\handleChange\\setHandleNextText.ts",[],"C:\\react\\keyboard\\src\\component\\Main\\InputKeyboard\\handleChange\\setHandleError.ts",[],"C:\\react\\keyboard\\src\\component\\Main\\InputKeyboard\\handleChange\\initialRightButton.ts",[],"C:\\react\\keyboard\\src\\component\\Main\\InputKeyboard\\SmallStatistic\\SmallStatistic.tsx",[],"C:\\react\\keyboard\\src\\component\\Main\\InputKeyboard\\SmallStatistic\\speedAverage.ts",[],"C:\\react\\keyboard\\src\\component\\Aside\\speed.ts",[],"C:\\react\\keyboard\\src\\component\\Main\\HeaderKeyboard\\MoreBadKey.tsx",["217","218"],"import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport {useEffect} from \"react\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {Alphabet} from \"../../../redux/header-reducer\";\r\n\r\nconst useStyle = makeStyles({\r\n    moreBadKey: {\r\n        padding: \"0px 0px 3px 0px\",\r\n        \"& button\": {\r\n            marginLeft: \"3px\",\r\n            padding: \"0px\",\r\n            border: \"1px solid #eee\",\r\n        }\r\n    },\r\n    button: {\r\n        display: \"flex\"\r\n    }\r\n})\r\n\r\nconst HtmlTooltip = withStyles((theme) => ({\r\n    tooltip: {\r\n        textAlign:\"center\",\r\n        backgroundColor: '#f5f5f9',\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        maxWidth: 120,\r\n        fontSize: theme.typography.pxToRem(12),\r\n        border: '1px solid #dadde9',\r\n    },\r\n}))(Tooltip);\r\ntype root={\r\n    currentLetter:string,\r\n    allText:Array<string>,\r\n    badLetter:string|Alphabet,\r\n}\r\n\r\n\r\nexport const MoreBadKey:React.FC<root> = ({currentLetter,allText,badLetter, ...props}) => {\r\n\r\n    useEffect(()=>{\r\n        if((document as any).getElementById(\"zoom\")!==null)(document as any).getElementById(\"zoom\").style.transform=\"scale(1)\"\r\n    },[allText[0]])\r\n    const classes = useStyle()\r\n    if (badLetter.length !== 0) {\r\n        debugger\r\n        return (\r\n            <>\r\n                <span className={classes.moreBadKey}>More bad keys:</span>\r\n                <Zoom in={true}>\r\n                <span id={\"zoom\"} className={classes.button}>\r\n                    {\r\n                    badLetter.map((el:any, ind:string) => {\r\n                        if (Number(ind) < 3) {\r\n                            if(el.typeScore===999)\r\n                                el.typeScore=0\r\n                            return (\r\n                                <React.Fragment key={ind}>\r\n                                    <HtmlTooltip\r\n                                        title={\r\n                                            <React.Fragment>\r\n                                                <Typography color=\"inherit\">Statistic of letter {el.letter}</Typography>\r\n                                                <div><em>{\"Score\"}</em> {' '} <b>{el.typeScore}</b></div>\r\n                                                <div><em>{\"Number of error\"}</em> {' '} <b>{el.errorCount}</b></div>\r\n                                                <div><em>{\"Count of letter\"}</em> {' '} <b>{el.typeCounter}</b></div>\r\n                                            </React.Fragment>\r\n                                        }\r\n                                    >\r\n                                        <Button id={\"badKey \" + ind} >{el.letter}</Button>\r\n                                    </HtmlTooltip>\r\n                                </React.Fragment>\r\n                            )\r\n                        }\r\n                    })\r\n                }\r\n                </span>\r\n                </Zoom>\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n    else return (\r\n        <div className={classes.moreBadKey}>Need more data</div>\r\n)\r\n\r\n}","C:\\react\\keyboard\\src\\component\\Aside\\TabPanel.tsx",[],"C:\\react\\keyboard\\src\\component\\Main\\InputKeyboard\\Blink\\Blink.tsx",[],"C:\\react\\keyboard\\src\\redux\\header-reducer.ts",[],"C:\\react\\keyboard\\src\\redux\\store.ts",[],"C:\\react\\keyboard\\src\\redux\\input-reducer.ts",[],"C:\\react\\keyboard\\src\\redux\\function\\sortTextByScore.ts",[],"C:\\react\\keyboard\\src\\redux\\function\\bubbleSort.ts",[],"C:\\react\\keyboard\\src\\redux\\function\\getNewText.ts",[],"C:\\react\\keyboard\\src\\redux\\function\\generateText.ts",[],"C:\\react\\keyboard\\src\\redux\\function\\getAlphabet.ts",[],"C:\\react\\keyboard\\src\\redux\\function\\getArrayCommonCharacter.ts",[],"C:\\react\\keyboard\\src\\redux\\function\\getCurrentIndex.ts",[],"C:\\react\\keyboard\\src\\redux\\function\\getKeyComplexity.ts",["219"],"import {Alphabet} from \"../header-reducer\";\r\n\r\nexport const getKeyComplexity=(currentAlphabet:Alphabet,sliderValue:number[]):Alphabet=>{\r\n    let step\r\n    let arrKeys = Object.keys(currentAlphabet)\r\n    let arrKeysLength=Object.keys(currentAlphabet).length\r\n    let numberLetterSteps = 100 /arrKeysLength\r\n    for (step = 1; arrKeysLength!==step; step++) {\r\n        if(sliderValue[0] > numberLetterSteps * step)\r\n        {\r\n            arrKeys.shift()\r\n        }\r\n        if (sliderValue[1] < (100 - step*numberLetterSteps))\r\n        {\r\n            arrKeys.splice(-1,1)\r\n        }\r\n    }\r\n    step=0;\r\n    for (const [key, value] of Object.entries(currentAlphabet)) {\r\n        if (arrKeys[step] !== key) {\r\n            currentAlphabet[Number(key)].disable = true;\r\n            step--\r\n        }\r\n        else {\r\n            currentAlphabet[Number(key)].disable = false;\r\n        }\r\n        step++\r\n    }\r\n    return currentAlphabet\r\n}\r\n","C:\\react\\keyboard\\src\\redux\\function\\inputArrInWordArr.ts",[],"C:\\react\\keyboard\\src\\redux\\function\\setSpeedInArray.ts",[],"C:\\react\\keyboard\\src\\redux\\function\\setStateTypeScore.ts",[],"C:\\react\\keyboard\\src\\redux\\function\\setTypeCounterInArray.ts",[],"C:\\react\\keyboard\\src\\pxToRem.ts",[],"C:\\react\\keyboard\\src\\App.tsx",[],"C:\\react\\keyboard\\src\\component\\Advertising\\Advertising.tsx",[],"C:\\react\\keyboard\\src\\component\\Header\\Header.tsx",[],"C:\\react\\keyboard\\src\\handlerClickApp.tsx",[],"C:\\react\\keyboard\\src\\component\\Aside\\AsideContainer.tsx",[],"C:\\react\\keyboard\\src\\component\\Footer\\Footer.tsx",[],"C:\\react\\keyboard\\src\\component\\Aside\\Aside.tsx",[],"C:\\react\\keyboard\\src\\component\\Main\\Main.tsx",[],"C:\\react\\keyboard\\src\\component\\Main\\ComplexityKeyboard\\ComplexityKeyboardContainer.tsx",[],"C:\\react\\keyboard\\src\\component\\Main\\ComplexityKeyboard\\ComplexityKeyboard.tsx",[],"C:\\react\\keyboard\\src\\component\\Main\\InputKeyboard\\handlerClick.ts",[],"C:\\react\\keyboard\\src\\component\\Main\\InputKeyboard\\handleChange\\handleChange.tsx",[],{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":72,"column":17,"nodeType":"226","endLine":72,"endColumn":27},{"ruleId":"224","severity":1,"message":"225","line":74,"column":16,"nodeType":"226","endLine":74,"endColumn":26},{"ruleId":"224","severity":1,"message":"225","line":84,"column":13,"nodeType":"226","endLine":84,"endColumn":34},{"ruleId":"224","severity":1,"message":"225","line":92,"column":13,"nodeType":"226","endLine":92,"endColumn":23},{"ruleId":"227","severity":1,"message":"228","line":40,"column":7,"nodeType":"229","endLine":40,"endColumn":31,"suggestions":"230"},{"ruleId":"231","severity":1,"message":"232","line":8,"column":21,"nodeType":"233","messageId":"234","endLine":8,"endColumn":26},{"ruleId":"231","severity":1,"message":"235","line":1,"column":8,"nodeType":"233","messageId":"234","endLine":1,"endColumn":13},{"ruleId":"227","severity":1,"message":"236","line":46,"column":8,"nodeType":"226","endLine":46,"endColumn":18},{"ruleId":"237","severity":1,"message":"238","line":56,"column":56,"nodeType":"239","messageId":"240","endLine":56,"endColumn":58},{"ruleId":"231","severity":1,"message":"241","line":19,"column":22,"nodeType":"233","messageId":"234","endLine":19,"endColumn":27},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'letter'. Either include it or remove the dependency array.","ArrayExpression",["244"],"@typescript-eslint/no-unused-vars","'slice' is assigned a value but never used.","Identifier","unusedVar","'React' is defined but never used.","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'value' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},"Update the dependencies array to be: [letter, state.buttonToKeyboard]",{"range":"247","text":"248"},[1233,1257],"[letter, state.buttonToKeyboard]"]